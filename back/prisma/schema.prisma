generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  name     String?
  email    String?   @unique
  password String
}

model Subject {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String

  topics  Topic[]
}

model Topic {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  subjectId String   @db.ObjectId
  name      String
  subject   Subject @relation(fields: [subjectId], references: [id], onDelete: Cascade)

  subtopics Subtopic[]
  tests     Test[]
}

model Subtopic {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  topicId   String   @db.ObjectId
  name      String
  topic     Topic    @relation(fields: [topicId], references: [id], onDelete: Cascade)

  lessons Lesson[]
}

model Lesson {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  subtopicId     String   @db.ObjectId
  videoLink      String?
  subtopic       Subtopic @relation(fields: [subtopicId], references: [id], onDelete: Cascade)

  contentBlocks  ContentBlock[]
}

model ContentBlock {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  lessonId  String  @db.ObjectId
  blockType String
  data      Json
  lesson    Lesson  @relation(fields: [lessonId], references: [id], onDelete: Cascade)
}

model Test {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  topicId   String   @db.ObjectId
  name      String
  questions Question[]
  topic     Topic    @relation(fields: [topicId], references: [id], onDelete: Cascade)
}

model Question {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  testId        String   @db.ObjectId
  questionType  String
  questionText  String
  questionImage String?
  explanation   String?
  options       Option[]
  test          Test     @relation(fields: [testId], references: [id], onDelete: Cascade)
}

model Option {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  questionId  String   @db.ObjectId
  optionText  String
  isCorrect   Boolean
  optionImage String?
  formType    String
  question    Question @relation(fields: [questionId], references: [id], onDelete: Cascade)
}
